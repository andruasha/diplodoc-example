name: docs-build-action
description: Build & Upload documentation

inputs:
  storage-bucket:
    required: true
  storage-endpoint:
    required: true
  storage-access-key-id:
    required: true
  storage-secret-access-key:
    required: true
  storage-region:
    required: true
  src-root:
    default: "./"
  build-root:
    default: "./_docs-build"

runs:
  using: composite
  steps:
      - name: List Pull Requests
        run: |
          TOKEN=$GITHUB_TOKEN
          REPO_OWNER=$GITHUB_REPOSITORY_OWNER
          REPO_NAME=$GITHUB_REPOSITORY

          curl -s -H "Authorization: Bearer $TOKEN" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls?state=open" \
            | jq '.[] | .title, .user.login'
    # - uses: actions/setup-node@v3
    #   with:
    #     node-version: 18
    # - run: npm i @diplodoc/cli -g
    #   shell: bash
    # - run: yfm -i ${{ inputs.src-root }} -o ${{ inputs.build-root }}
    #   shell: bash
    # - name: Install s3cmd
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install s3cmd
    #   shell: bash
    # - name: Upload to S3
    #   shell: bash
    #   run: |
    #     if [[ "${{ github.event_name }}" == "pull_request" ]]; then
    #       PREFIX="pr-${{ github.event.pull_request.number }}"
    #     else
    #       PREFIX="main"
    #     fi

    #     yfm publish \
    #       -i "${{ inputs.build-root }}" \
    #       --endpoint "${{ inputs.storage-endpoint }}" \
    #       --region "${{ inputs.storage-region }}" \
    #       --bucket "${{ inputs.storage-bucket }}" \
    #       --access-key-id "${{ inputs.storage-access-key-id }}" \
    #       --secret-access-key "${{ inputs.storage-secret-access-key }}" \
    #       --prefix "${PREFIX}/"
    # - name: Configure AWS CLI
    #   run: |
    #     aws configure set aws_access_key_id ${{ inputs.storage-access-key-id }}
    #     aws configure set aws_secret_access_key ${{ inputs.storage-secret-access-key }}
    #     aws configure set default.region ${{ inputs.storage-region }}
    #     aws configure set default.s3.endpoint_url ${{ inputs.storage-endpoint }}
    #     aws s3 rm s3://mekstack-test/folder/ --recursive --endpoint-url=${{ inputs.storage-endpoint }}
    #   shell: bash
    # - name: Remove unnecessary folders
    #   run: |
    #     FOLDERS=$(aws s3 ls s3://"${{ inputs.storage-bucket }}"/ --recursive --endpoint-url=${{ inputs.storage-endpoint }} | awk -F'/' '{print $2}' | uniq)
    #     OPEN_PRS=$(gh pr list --json number,state -q "is:open" | jq -r '.[].number')
    #     for FOLDER in $FOLDERS; do
    #       PR_NUMBER=$(echo $FOLDER | cut -d'-' -f2)
    #       if [[ ! " $OPEN_PRS " =~ " $PR_NUMBER " ]]; then
    #         aws s3 rm s3://"${{ inputs.storage-bucket }}"/"${FOLDER}" --recursive --endpoint-url=${{ inputs.storage-endpoint }}
    #       fi
    #     done
    #   shell: bash
