name: docs-build-action
description: Build & Upload documentation

inputs:
  github-token:
    required: true
  storage-bucket:
    required: true
  storage-endpoint:
    required: true
  storage-access-key-id:
    required: true
  storage-secret-access-key:
    required: true
  storage-region:
    required: true
  src-root:
    default: "./"
  build-root:
    default: "./_docs-build"

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install awscli boto3
      shell: bash

    - name: Run Python script
      run: python .github/workflows/scripts/main.py
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        STORAGE_BUCKET: ${{ inputs.storage-bucket }}
        STORAGE_ENDPOINT: ${{ inputs.storage-endpoint }}
        STORAGE_ACCESS_KEY_ID: ${{ inputs.storage-access-key-id }}
        STORAGE_SECRET_ACCESS_KEY: ${{ inputs.storage-secret-access-key }}
        STORAGE_REGION: ${{ inputs.storage-region }}
        SRC_ROOT: ${{ inputs.src-root }}
        BUILD_ROOT: ${{ inputs.build-root }}
      shell: bash
  #   - uses: actions/setup-node@v3
  #     with:
  #       node-version: 18
  #   - run: npm i @diplodoc/cli -g
  #     shell: bash
  #   - run: yfm -i ${{ inputs.src-root }} -o ${{ inputs.build-root }}
  #     shell: bash
  #   - name: Install s3cmd
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install s3cmd
  #     shell: bash
  #   - name: Upload to S3
  #     shell: bash
  #     run: |
  #       if [[ "${{ github.event_name }}" == "pull_request" ]]; then
  #         PREFIX="pr-${{ github.event.pull_request.number }}"
  #       else
  #         PREFIX="main"
  #       fi
# 
  #       yfm publish \
  #         -i "${{ inputs.build-root }}" \
  #         --endpoint "${{ inputs.storage-endpoint }}" \
  #         --region "${{ inputs.storage-region }}" \
  #         --bucket "${{ inputs.storage-bucket }}" \
  #         --access-key-id "${{ inputs.storage-access-key-id }}" \
  #         --secret-access-key "${{ inputs.storage-secret-access-key }}" \
  #         --prefix "${PREFIX}/"
  #   - name: Configure AWS CLI
  #     run: |
  #       aws configure set aws_access_key_id ${{ inputs.storage-access-key-id }}
  #       aws configure set aws_secret_access_key ${{ inputs.storage-secret-access-key }}
  #       aws configure set default.region ${{ inputs.storage-region }}
  #       aws configure set default.s3.endpoint_url ${{ inputs.storage-endpoint }}
  #       aws s3 rm s3://mekstack-test/folder/ --recursive --endpoint-url=${{ inputs.storage-endpoint }}
  #     shell: bash
    # - name: List pull request IDs
    #   run: |
    #     ids=$(gh pr list | awk '{print $1}')
    #     echo "Pull request IDs: $ids"
    #   env:
    #     GITHUB_TOKEN: ${{ inputs.github-token }}
    #   shell: bash
# - name: Extract PR numbers from S3 bucket folders
#   run: |
#     aws configure set aws_access_key_id ${{ inputs.storage-access-key-id }}
#     aws configure set aws_secret_access_key ${{ inputs.storage-secret-access-key }}
#     aws configure set default.region ${{ inputs.storage-region }}
#     aws configure set default.s3.endpoint_url ${{ inputs.storage-endpoint }}
#   shell: bash

